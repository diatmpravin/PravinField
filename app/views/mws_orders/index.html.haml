= paginate @mws_orders
%br

.right
	= form_tag mws_orders_path, :method => 'get' do
		%p
			= text_field_tag :search, @search
			= submit_tag :search, :name => nil
		%p
			= link_to 'Orders With Unmatched SKUs', mws_orders_path(:unmatched=>1)
		%p
			= link_to "Download order", export_to_csv_mws_orders_path	
			
%h1="Listing Orders Received From Amazon"

#exportOrders
	= form_tag export_to_csv_mws_orders_path, :autocomplete => 'off' ,:method => 'get' do
		%p
			Start date:
			= text_field_tag :startDate, '' , :size => 10, :class => "exportOrdersDate", :required => "required"
			End date:			 
			= text_field_tag :endDate, '' , :size => 10, :class => "exportOrdersDate", :required => "required"
			= submit_tag "Download order"
%table
	%tr
		%th="Store"
		%th="Purchase at (UTC)"
		%th="Ship to name"
		%th="Shipping"
		%th="Amount"
		%th="City"
		%th="State or region"
		%th="Country code"
		%th="Items"
		%th="Items Missing?"
		%th="Gift?"
		%th="MFN?"
		%th="OMX?"
		%th

	- @mws_orders.each do |mws_order|
		%tr
			%td= mws_order.store.name
			%td= time_ago_in_words(mws_order.purchase_date) + " ago"
			%td= mws_order.name
			%td= mws_order.shipment_service_level_category
			%td.num= number_to_currency(mws_order.amount, :precision => 2)
			%td= mws_order.city
			%td= mws_order.omx_state
			%td= mws_order.omx_country
			%td= mws_order.get_item_quantity_ordered
			%td
				- missing = mws_order.get_item_quantity_missing 
				- if missing > 0
					%b= "#{missing} missing"
			
			%td
				- if mws_order.omx_gift_wrapping == 'True'
					=image_tag('gift.png', :title => "#{mws_order.omx_gift_wrap_level} - #{mws_order.omx_gift_message}", :width => 20)
			%td= mws_order.fulfillment_channel
			%td
				- omx_status = mws_order.pushed_to_omx?
				- if omx_status == "Error"
					%b= omx_status
				- else
					= omx_status
			%td= link_to 'Show', mws_order
